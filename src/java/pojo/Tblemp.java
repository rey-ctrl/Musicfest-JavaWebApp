package pojo;
// Generated Oct 13, 2023 9:59:41 PM by Hibernate Tools 4.3.1

import DAO.DAOEmployee;
import java.util.List;
import javax.faces.application.FacesMessage;
import javax.faces.bean.ManagedBean;
import javax.faces.context.FacesContext;

/**
 * Tblemp generated by hbm2java
 */
@ManagedBean
public class Tblemp  implements java.io.Serializable {


     private Integer idEmployee;
     private String namaEmployee;
     private String gender;
     private String tlpn;
     private String sallary;
     private String address;

     public void save_employee() {
        if (namaEmployee == null || namaEmployee.isEmpty() || gender == null || gender.isEmpty() || tlpn == null || gender.isEmpty() || sallary == null || sallary.isEmpty() || address == null || address.isEmpty()) {
            // Menampilkan pesan kesalahan jika kolom yang diperlukan kosong
            FacesMessage message = new FacesMessage("Data cannot be empty!");
            message.setSeverity(FacesMessage.SEVERITY_ERROR);
            FacesContext.getCurrentInstance().addMessage(null, message);
        } else {
            // Melanjutkan penyimpanan data karyawan ke database jika validasi sukses
            DAOEmployee adddd = new DAOEmployee();
            adddd.add_employee(this);
        }
    }

    public List<Tblemp> getAllRecordsss() {
        DAOEmployee plo = new DAOEmployee();
        List<Tblemp> lPlo = plo.retreveTblemp();
        return lPlo;
    }

    public String getByIdemp() {
        String id_employee = idEmployee.toString();
        DAOEmployee daoEmployee = new DAOEmployee();
        List<Tblemp> employeeList = daoEmployee.getbyIDemp(id_employee);

        if (!employeeList.isEmpty()) {
            // Employee ditemukan, isi nilai-nilai
            Tblemp employee = employeeList.get(0);
            namaEmployee = employee.getNamaEmployee();
            gender = employee.getGender();
            tlpn = employee.getTlpn();
            sallary = employee.getSallary();
            address = employee.getAddress();
        } else {
            // Employee tidak ditemukan, berikan pesan kesalahan kepada pengguna
            FacesMessage message = new FacesMessage("Employee with ID " + id_employee + " doesn't exist.");
            message.setSeverity(FacesMessage.SEVERITY_ERROR); // Menetapkan tingkat kesalahan menjadi error
            FacesContext.getCurrentInstance().addMessage(null, message);
        }

        return "employee";
    }

    public String editte() {
        if (namaEmployee == null || namaEmployee.isEmpty() || gender == null || gender.isEmpty() || tlpn == null || tlpn.isEmpty() || sallary == null || sallary.isEmpty() || address == null || address.isEmpty()) {
            FacesMessage message = new FacesMessage("Data cannot be empty!");
            message.setSeverity(FacesMessage.SEVERITY_ERROR); // Menetapkan tingkat kesalahan menjadi error
            FacesContext.getCurrentInstance().addMessage(null, message);
        } else {
            DAOEmployee plo = new DAOEmployee();
            plo.editEmplo(this);
            namaEmployee = "";
            gender = "";
            tlpn = "";
            sallary = "";
            address = "";
        }
        return "employee";
    }

    public String deleteet() {
        DAOEmployee plo = new DAOEmployee();
        plo.deleteEmplo(idEmployee);
        namaEmployee = "";
        gender = "";
        tlpn = "";
        sallary = "";
        address = "";
        return "employee";
    }
    
    public Tblemp() {
    }

    public Tblemp(String namaEmployee, String gender, String tlpn, String sallary, String address) {
       this.namaEmployee = namaEmployee;
       this.gender = gender;
       this.tlpn = tlpn;
       this.sallary = sallary;
       this.address = address;
    }
   
    public Integer getIdEmployee() {
        return this.idEmployee;
    }
    
    public void setIdEmployee(Integer idEmployee) {
        this.idEmployee = idEmployee;
    }
    public String getNamaEmployee() {
        return this.namaEmployee;
    }
    
    public void setNamaEmployee(String namaEmployee) {
        this.namaEmployee = namaEmployee;
    }
    public String getGender() {
        return this.gender;
    }
    
    public void setGender(String gender) {
        this.gender = gender;
    }
    public String getTlpn() {
        return this.tlpn;
    }
    
    public void setTlpn(String tlpn) {
        this.tlpn = tlpn;
    }
    public String getSallary() {
        return this.sallary;
    }
    
    public void setSallary(String sallary) {
        this.sallary = sallary;
    }
    public String getAddress() {
        return this.address;
    }
    
    public void setAddress(String address) {
        this.address = address;
    }




}


